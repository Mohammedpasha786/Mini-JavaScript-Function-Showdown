<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>COSC Commit Counter - HackWeek Tracker</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            padding: 40px;
            text-align: center;
            max-width: 500px;
            width: 100%;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .header {
            margin-bottom: 30px;
        }

        .logo {
            font-size: 2.5em;
            margin-bottom: 10px;
            background: linear-gradient(45deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: bold;
        }

        .subtitle {
            color: #666;
            font-size: 1.1em;
            margin-bottom: 5px;
        }

        .event-tag {
            display: inline-block;
            background: linear-gradient(45deg, #ff6b6b, #ee5a24);
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 0.9em;
            font-weight: 600;
            margin-bottom: 20px;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }

        .counter-display {
            background: linear-gradient(135deg, #2c3e50, #34495e);
            color: white;
            border-radius: 15px;
            padding: 30px;
            margin: 30px 0;
            position: relative;
            overflow: hidden;
        }

        .counter-display::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
            animation: shine 3s infinite;
        }

        @keyframes shine {
            0% { left: -100%; }
            100% { left: 100%; }
        }

        .counter-label {
            font-size: 1.2em;
            margin-bottom: 10px;
            opacity: 0.9;
        }

        .counter-value {
            font-size: 4em;
            font-weight: bold;
            margin: 10px 0;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s ease;
        }

        .counter-value.animate {
            transform: scale(1.2);
        }

        .buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
            flex-wrap: wrap;
            margin-top: 30px;
        }

        .btn {
            padding: 15px 30px;
            border: none;
            border-radius: 10px;
            font-size: 1em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            min-width: 120px;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            transition: width 0.6s, height 0.6s;
        }

        .btn:active::before {
            width: 300px;
            height: 300px;
        }

        .btn-increment {
            background: linear-gradient(45deg, #27ae60, #2ecc71);
            color: white;
            box-shadow: 0 5px 15px rgba(46, 204, 113, 0.3);
        }

        .btn-increment:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(46, 204, 113, 0.4);
        }

        .btn-decrement {
            background: linear-gradient(45deg, #e74c3c, #c0392b);
            color: white;
            box-shadow: 0 5px 15px rgba(231, 76, 60, 0.3);
        }

        .btn-decrement:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(231, 76, 60, 0.4);
        }

        .btn-reset {
            background: linear-gradient(45deg, #9b59b6, #8e44ad);
            color: white;
            box-shadow: 0 5px 15px rgba(155, 89, 182, 0.3);
        }

        .btn-reset:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(155, 89, 182, 0.4);
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none !important;
        }

        .stats {
            margin-top: 30px;
            padding: 20px;
            background: rgba(52, 73, 94, 0.1);
            border-radius: 10px;
            display: flex;
            justify-content: space-around;
            flex-wrap: wrap;
            gap: 10px;
        }

        .stat {
            text-align: center;
        }

        .stat-label {
            font-size: 0.9em;
            color: #666;
            margin-bottom: 5px;
        }

        .stat-value {
            font-size: 1.2em;
            font-weight: bold;
            color: #2c3e50;
        }

        @media (max-width: 600px) {
            .container {
                padding: 30px 20px;
            }
            
            .buttons {
                flex-direction: column;
                align-items: center;
            }
            
            .btn {
                width: 100%;
                max-width: 250px;
            }
            
            .counter-value {
                font-size: 3em;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="logo">üöÄ COSC</div>
            <div class="subtitle">Open Source Community</div>
            <div class="event-tag">HackWeek Live Tracker</div>
        </div>

        <div class="counter-display">
            <div class="counter-label">Total Commits</div>
            <div class="counter-value" id="counterValue">0</div>
        </div>

        <div class="buttons">
            <button class="btn btn-increment" id="incrementBtn" onclick="incrementCounter()">
                ‚ûï New Commit
            </button>
            <button class="btn btn-decrement" id="decrementBtn" onclick="decrementCounter()">
                ‚Ü©Ô∏è Revert
            </button>
            <button class="btn btn-reset" onclick="resetCounter()">
                üîÑ Reset Day
            </button>
        </div>

        <div class="stats">
            <div class="stat">
                <div class="stat-label">Increments</div>
                <div class="stat-value" id="incrementCount">0</div>
            </div>
            <div class="stat">
                <div class="stat-label">Reverts</div>
                <div class="stat-value" id="decrementCount">0</div>
            </div>
            <div class="stat">
                <div class="stat-label">Resets</div>
                <div class="stat-value" id="resetCount">0</div>
            </div>
        </div>
    </div>

    <script>
        // Counter state
        let counter = 0;
        let incrementCount = 0;
        let decrementCount = 0;
        let resetCount = 0;

        // DOM elements
        const counterValue = document.getElementById('counterValue');
        const decrementBtn = document.getElementById('decrementBtn');
        const incrementCountEl = document.getElementById('incrementCount');
        const decrementCountEl = document.getElementById('decrementCount');
        const resetCountEl = document.getElementById('resetCount');

        // Update counter display
        function updateDisplay() {
            counterValue.textContent = counter;
            counterValue.classList.add('animate');
            setTimeout(() => counterValue.classList.remove('animate'), 300);
            
            // Update button states
            decrementBtn.disabled = counter === 0;
            
            // Update stats
            incrementCountEl.textContent = incrementCount;
            decrementCountEl.textContent = decrementCount;
            resetCountEl.textContent = resetCount;
        }

        // Increment counter (new commit)
        function incrementCounter() {
            counter++;
            incrementCount++;
            updateDisplay();
            
            // Add visual feedback
            const btn = document.getElementById('incrementBtn');
            btn.style.transform = 'scale(0.95)';
            setTimeout(() => btn.style.transform = '', 150);
        }

        // Decrement counter (revert commit)
        function decrementCounter() {
            if (counter > 0) {
                counter--;
                decrementCount++;
                updateDisplay();
                
                // Add visual feedback
                const btn = document.querySelector('.btn-decrement');
                btn.style.transform = 'scale(0.95)';
                setTimeout(() => btn.style.transform = '', 150);
            }
        }

        // Reset counter (new day)
        function resetCounter() {
            counter = 0;
            resetCount++;
            updateDisplay();
            
            // Add visual feedback
            const btn = document.querySelector('.btn-reset');
            btn.style.transform = 'scale(0.95)';
            setTimeout(() => btn.style.transform = '', 150);
            
            // Show reset animation
            counterValue.style.color = '#e74c3c';
            setTimeout(() => counterValue.style.color = '', 500);
        }

        // Keyboard shortcuts
        document.addEventListener('keydown', (e) => {
            switch(e.key) {
                case '+':
                case '=':
                    incrementCounter();
                    break;
                case '-':
                    decrementCounter();
                    break;
                case 'r':
                case 'R':
                    if (e.ctrlKey || e.metaKey) {
                        e.preventDefault();
                        resetCounter();
                    }
                    break;
            }
        });

        // Initialize display
        updateDisplay();

        // Add some visual flair on load
        window.addEventListener('load', () => {
            document.querySelector('.container').style.animation = 'fadeInUp 0.8s ease-out';
        });

        // Add fadeInUp animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes fadeInUp {
                from {
                    opacity: 0;
                    transform: translateY(30px);
                }
                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>
